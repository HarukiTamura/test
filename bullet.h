/*******************************************************************************
* タイトル	:弾.h
* ファイル名:bullet.h
* 作成者	:田村春樹
* 作成日	:2015/06/24
********************************************************************************
* 更新履歴	ver 1.00
*******************************************************************************/
#ifndef _BULLET_H_
#define _BULLET_H_
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "main.h"
#include "game.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/
#define BULLET_MAX			( 18000 )
typedef enum
{
	BULLET_NORMAL = 0,	/*丸型通常弾*/
	BULLET_RAPID,
	BULLET_HOMING,	/*ホーミング弾*/
	BULLET_PENETRATE,
	BULLET_TYPE_MAX
}BULLET_TYPE;
/*******************************************************************************
* 構造体定義
*******************************************************************************/

/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/

/*******************************************************************************
* 関数名	:HRESULT InitBullet( void )
*		弾初期化関数です。
* 引数		:void 引数なし
* 戻り値	:HRESULT 関数の実行結果
* 説明		:変数等の初期化を実行する起動毎に一度のみ動作する関数です。
*******************************************************************************/
HRESULT InitBullet( void );

/*******************************************************************************
* 関数名	:void UninitBullet( void )
*		弾終了処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:終了時に実行する関数を内包する関数で終了時に一度のみ動作。
*******************************************************************************/
void UninitBullet( void );

/*******************************************************************************
* 関数名	:void UpdateBullet( void )
*		弾更新処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:処理周回毎の処理内容を記述します。実質的なメイン関数です。
*******************************************************************************/
void UpdateBullet( void );

/*******************************************************************************
* 関数名	:void DrawBullet( void )
*		弾描画処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:画面出力に関わる処理を内包します。
*******************************************************************************/
void DrawBullet( void );

/*******************************************************************************
* 関数名	:void SetBullet( D3DXVECTOR3 pos , D3DXVECTOR3 vecMove , int nLife , ENEMY_TYPE type )
*		弾を生成する関数です。
* 引数		:D3DXVECTOR3 pos		弾の出現位置です。
*			 D3DXVECTOR3 vecMove	弾の移動量です。
*			 int nLife				弾の寿命です。
*			(ENEMY_TYPE type		弾の種類です。)	
* 戻り値	:void 戻り値なし
* 説明		:画面出力に関わる処理を内包します。
*******************************************************************************/
//void SetBullet( int posX , int posY , int posZrot , int moveX , int moveY , int moveZrot , int nLife );
void SetBullet( int posX , int posY , int posZrot , int moveX , int moveY , int moveZrot , int nLife , CATEGORY category , BULLET_TYPE type );
void SetBulletPlayer( int posX , int posY , int posZrot , int moveX , int moveY , int moveZrot , int nLife , BULLET_TYPE type = BULLET_NORMAL );
void SetBulletEnemy( int posX , int posY , int posZrot , int moveX , int moveY , int moveZrot , int nLife , BULLET_TYPE type = BULLET_NORMAL );
void SetBulletLiar( int posX , int posY , int posZrot , int moveX , int moveY , int moveZrot , int nLife , BULLET_TYPE type = BULLET_NORMAL );


/*******************************************************************************
* 関数名	:void DeleteBullet( int posX , int posY , int radius )
*		弾消しを発生させる関数です。
* 引数		:int posX		発生地点X座標	
*			 int posY		発生地点Y座標
*			 int radius		半径
* 戻り値	:void 戻り値なし
* 説明		:指定地点を中心とした円の中にある敵弾を消滅させる関数です。
*******************************************************************************/
void DeleteBullet( int posX , int posY , int radius );
#endif