/*******************************************************************************
* タイトル	:タイトル.cpp
* ファイル名:Title.cpp
* 作成者	:田村春樹
* 作成日	:2015/05/29
********************************************************************************
* 更新履歴	ver 1.00
*******************************************************************************/

/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include <math.h>
#include "main.h"
#include "title.h"
#include "input.h"
#include "fade.h"
#include "TitleGraphic.h"
#include "titleGui.h"
#include "titleLogo.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/
#define TITLE_FADE_TIMING	( 60 )	//入力からフェード開始までの余韻
#define TITLE_MOVE_CNT_MAX	( 360 )
/*******************************************************************************
* 構造体定義
*******************************************************************************/

/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/

/*******************************************************************************
* グローバル変数
*******************************************************************************/
static bool titleMoveFlag;
static int titleMoveCnt;

/*******************************************************************************
* 関数名	:HRESULT InitTitle( void )
*		タイトル初期化関数です。
* 引数		:void 引数なし
* 戻り値	:HRESULT 関数の実行結果
* 説明		:変数等の初期化を実行する起動毎に一度のみ動作する関数です。
*******************************************************************************/
HRESULT InitTitle( void )
{
	PlaySound(SOUND_LABEL_BGM_OP);

	/*タイトルグラフィックの設定*/
	if( InitTitleGraphic() != S_OK )
	{
		Error("ポリゴンの初期化に失敗しました。");
	}
	
	/*タイトルGUIの設定*/
	if( InitTitleGui() != S_OK )
	{
		Error("ユーザーインターフェースの初期化に失敗しました。");
	}

	/*タイトルロゴの設定*/
	if( InitTitleLogo() != S_OK )
	{
		Error("タイトルロゴの初期化に失敗しました。");
	}

	titleMoveFlag = false;
	titleMoveCnt = 0;
	return S_OK;
}

/*******************************************************************************
* 関数名	:void UninitTitle( void )
*		タイトル終了処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:終了時に実行する関数を内包する関数で終了時に一度のみ動作。
*******************************************************************************/
void UninitTitle( void )
{
	
	/*タイトルグラフィックの解放*/
	UninitTitleGraphic();
	
	/*タイトルGUIの解放*/
	UninitTitleGui();
	
	
	/*タイトルロゴの解放*/
	UninitTitleLogo();
}

/*******************************************************************************
* 関数名	:void UpdateTitle( void )
*		タイトル更新処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:処理周回毎の処理内容を記述します。実質的なメイン関数です。
*******************************************************************************/
void UpdateTitle( void )
{
	/*タイトルグラフィックの更新*/
	UpdateTitleGraphic();
	/*タイトルGUIの更新*/
	UpdateTitleGui();
	
	/*タイトルロゴの更新*/
	UpdateTitleLogo();
	
	if( titleMoveFlag == false && GetFade() == FADE_NONE && ( GetAnykeyPress() || GetAnyButtonPress( 0 ) ) )
	{
		PlaySound(SOUND_LABEL_SE_ENTER);
		titleMoveFlag = true;
		titleMoveCnt = 0;
	}
	titleMoveCnt = ( titleMoveCnt == TITLE_MOVE_CNT_MAX ? 0 : titleMoveCnt + 1 );
	if( titleMoveFlag == true && titleMoveCnt == TITLE_FADE_TIMING )
	{
		SetFade( FADE_OUT , MODE_MENU ); 
	}
}

/*******************************************************************************
* 関数名	:void DrawTitle( void )
*		タイトル描画処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:画面出力に関わる処理を内包します。
*******************************************************************************/
void DrawTitle( void )
{
	
	/*タイトルグラフィックの描画*/
	DrawTitleGraphic();
	
	if( titleMoveFlag == true && titleMoveCnt % 10 <= 5 )
	{
		/*タイトルGUIの描画*/
		DrawTitleGui();
	}
	if( titleMoveFlag == false && titleMoveCnt % 30 <= 27 )
	{
		/*タイトルGUIの描画*/
		DrawTitleGui();
	}
	

	/*タイトルロゴの描画*/
	DrawTitleLogo();
}