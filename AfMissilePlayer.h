/*******************************************************************************
* タイトル	:自弾.h
* ファイル名:AfMissilePlayer.h
* 作成者	:田村春樹
* 作成日	:2015/05/29
********************************************************************************
* 更新履歴	ver 1.00
*******************************************************************************/
#ifndef _AF_MISSILE_PLAYER_H_
#define _AF_MISSILE_PLAYER_H_
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "main.h"
#include "afPointConvert.h"
/*******************************************************************************
* マクロ定義
*******************************************************************************/

#define MISSILE_PLAYER_MAX_NUM	( 30 )	//自弾の数
#define MISSILE_PLAYER_RADIUS	( 15000 )	//当たり判定
#define MISSILE_PLAYER_HIT_ZONE	( 0.04f )

typedef enum
{
	MISSILE_PLAYER_MODE_NORMAL = 0,
	MISSILE_PLAYER_MODE_DAMAGE,
	MISSILE_PLAYER_MODE_HYPERMODE,
	MISSILE_PLAYER_MODE_OVERHEAT,
	MISSILE_PLAYER_MODE_START,
	MISSILE_PLAYER_MODE_MAX
}MISSILE_PLAYER_MODE;


/*******************************************************************************
* 構造体定義
*******************************************************************************/
typedef struct
{
	bool bUse;
	AF_OBJECT_STATUS posStatus;
	float moveX;
	float moveY;
	float moveZ;
	int stayCnt;
	float posZ;
	int intPosX;
	int intPosY;
	int nLife;
}MISSILE_PLAYER_STATUS;

/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/

/*******************************************************************************
* 関数名	:HRESULT InitAfMissilePlayer( void )
*		自弾初期化関数です。
* 引数		:void 引数なし
* 戻り値	:HRESULT 関数の実行結果
* 説明		:変数等の初期化を実行する起動毎に一度のみ動作する関数です。
*******************************************************************************/
HRESULT InitAfMissilePlayer( void );

/*******************************************************************************
* 関数名	:HRESULT InitDirectAfMissilePlayer( void )
*		自弾初期化関数です。
* 引数		:void 引数なし
* 戻り値	:HRESULT 関数の実行結果
* 説明		:変数等の初期化を実行する起動毎に一度のみ動作する関数です。
*******************************************************************************/
HRESULT InitDirectAfMissilePlayer( void );

/*******************************************************************************
* 関数名	:HRESULT InitValueAfMissilePlayer( void )
*		自弾初期化関数です。
* 引数		:void 引数なし
* 戻り値	:HRESULT 関数の実行結果
* 説明		:変数等の初期化を実行する起動毎に一度のみ動作する関数です。
*******************************************************************************/
void InitValueAfMissilePlayer( void );

/*******************************************************************************
* 関数名	:void UninitAfMissilePlayer( void )
*		自弾終了処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:終了時に実行する関数を内包する関数で終了時に一度のみ動作。
*******************************************************************************/
void UninitAfMissilePlayer( void );

/*******************************************************************************
* 関数名	:void UpdateAfMissilePlayer( void )
*		自弾更新処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:処理周回毎の処理内容を記述します。実質的なメイン関数です。
*******************************************************************************/
void UpdateAfMissilePlayer( void );

/*******************************************************************************
* 関数名	:void DrawAfMissilePlayer( void )
*		自弾描画処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:画面出力に関わる処理を内包します。
*******************************************************************************/
void DrawAfMissilePlayer( void );

/*******************************************************************************
* 関数名	:void DrawAfMissilePlayercore( void )
*		自弾描画処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:画面出力に関わる処理を内包します。
*******************************************************************************/
void DrawAfMissilePlayercore( void );

/*******************************************************************************
* 関数名	:MISSILE_PLAYER_STATUS* GetMissilePlayerState( int num )
*		自弾のステータスを取得します。
* 引数		:int num	入手する構造体の番号
* 戻り値	:void 戻り値なし
* 説明		:自弾のステータスを取得します。。
*******************************************************************************/
MISSILE_PLAYER_STATUS* GetMissilePlayerState( int num );

/*******************************************************************************
* 関数名	:MISSILE_PLAYER_STATUS* GetMissilePlayerState( int num )
*		自弾のステータスを取得します。
* 引数		:int num	入手する構造体の番号
* 戻り値	:void 戻り値なし
* 説明		:自弾のステータスを取得します。。
*******************************************************************************/
void SetMissilePlayerState( float posX , float posY , float posZ , float moveX , float moveY , float moveZ );

#endif