/*******************************************************************************
* タイトル	:自作当たり判定header
* ファイル名:unoHitChecker.h
* 作成者	:田村春樹
* 作成日	:2015/07/05
********************************************************************************
* 更新履歴	ver 1.00 おおよその完成
*
*******************************************************************************/
#ifndef _UNOHITCHECKER_H_
#define _UNOHITCHECKER_H_

/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "main.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/

/*******************************************************************************
* 構造体定義
*******************************************************************************/

/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/

/*******************************************************************************
* グローバル変数
*******************************************************************************/

/*******************************************************************************
* 関数名	:HitTwinCircle( int posX1 , int posY1 , int radius1 , int posX2 , int posY2 , int radius2 )
*		円と円の当たり判定を行います。
* 引数		:int posX1		円１のX座標
*			 int posY1		円１のY座標
*			 int radius1	円１の半径
*			 int posX2		円２のX座標
*			 int posY2		円２のY座標
*			 int radius2	円２の半径
* 戻り値	:bool true:接触 false:非接触
* 説明		:円と円の当たり判定を行います。
*******************************************************************************/
bool HitTwinCircle( int posX1 , int posY1 , int radius1 , int posX2 , int posY2 , int radius2 );


/*******************************************************************************
* 関数名	:bool HitTwinLine( int pastPosX1 , int pastPosY1 , int posX1 , int posY1 , int pastPosX2 , int pastPosY2 , int posX2 ,int posY2 )
*		線分と線分の当たり判定を行います。
* 引数		:int pastPosX1	線分１の始点X座標
*			 int pastPosY1	線分１の始点Y座標
*			 int posX1		線分１の終点X座標
*			 int posY1		線分１の終点Y座標
*			 int pastPosX2	線分２の始点X座標		
*			 int pastPosY2	線分２の始点Y座標		
*			 int posX2		線分２の終点X座標		
*			 int posY2		線分２の終点Y座標		
* 戻り値	:bool true:接触 false:非接触
* 説明		:線分と線分の当たり判定を行います。
*******************************************************************************/
bool HitTwinLine( int pastPosX1 , int pastPosY1 , int posX1 , int posY1 , int pastPosX2 , int pastPosY2 , int posX2 ,int posY2 );
bool HitPosTwinLine( float posX1 , float posY1 , float posX2 , float posY2 , float posX3 , float posY3 , float posX4 ,float posY4 , float *closeX , float *closeY );

#endif