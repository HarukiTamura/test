/*******************************************************************************
* タイトル	:爆発.h
* ファイル名:AfExplosion.h
* 作成者	:田村春樹
* 作成日	:2015/06/24
********************************************************************************
* 更新履歴	ver 1.00
*******************************************************************************/
#ifndef _AF_EXPLOSION_H_
#define _AF_EXPLOSION_H_
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "main.h"
#include "game.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/
#define AF_EXPLOSION_MAX			( 400 )
typedef enum
{
	AF_EXPLOSION_001 = 0,
	AF_EXPLOSION_002,
	AF_EXPLOSION_003,
	AF_EXPLOSION_004,
	AF_EXPLOSION_TYPE_MAX
}AF_EXPLOSION_TYPE;
/*******************************************************************************
* 構造体定義
*******************************************************************************/

/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/

/*******************************************************************************
* 関数名	:HRESULT InitAfExplosion( void )
*		爆発初期化関数です。
* 引数		:void 引数なし
* 戻り値	:HRESULT 関数の実行結果
* 説明		:変数等の初期化を実行する起動毎に一度のみ動作する関数です。
*******************************************************************************/
HRESULT InitAfExplosion( void );

/*******************************************************************************
* 関数名	:void UninitAfExplosion( void )
*		爆発終了処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:終了時に実行する関数を内包する関数で終了時に一度のみ動作。
*******************************************************************************/
void UninitAfExplosion( void );

/*******************************************************************************
* 関数名	:void UpdateAfExplosion( void )
*		爆発更新処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:処理周回毎の処理内容を記述します。実質的なメイン関数です。
*******************************************************************************/
void UpdateAfExplosion( void );

/*******************************************************************************
* 関数名	:void DrawAfExplosion( void )
*		爆発描画処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:画面出力に関わる処理を内包します。
*******************************************************************************/
void DrawAfExplosion( void );

/*******************************************************************************
* 関数名	:void SetAfExplosion( D3DXVECTOR3 pos , D3DXVECTOR3 vecMove , int nLife , ENEMY_TYPE type )
*		爆発を生成する関数です。
* 引数		:D3DXVECTOR3 pos		爆発の出現位置です。
*			 D3DXVECTOR3 vecMove	爆発の移動量です。
*			 int nLife				爆発の寿命です。
*			(ENEMY_TYPE type		爆発の種類です。)	
* 戻り値	:void 戻り値なし
* 説明		:画面出力に関わる処理を内包します。
*******************************************************************************/
void SetAfExplosion( int posX , int posY , int posZrot , int moveX , int moveY , int moveZrot , int nLife , AF_EXPLOSION_TYPE type );
#endif