/*******************************************************************************
* タイトル	:タイマー.h
* ファイル名:timer.h
* 作成者	:田村春樹
* 作成日	:2015/06/24
********************************************************************************
* 更新履歴	ver 1.00
*******************************************************************************/
#ifndef _TIMER_H_
#define _TIMER_H_
/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "main.h"
#include "game.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/



/*******************************************************************************
* 構造体定義
*******************************************************************************/

/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/

/*******************************************************************************
* 関数名	:HRESULT InitTimer( void )
*		タイマー初期化関数です。
* 引数		:void 引数なし
* 戻り値	:HRESULT 関数の実行結果
* 説明		:変数等の初期化を実行する起動毎に一度のみ動作する関数です。
*******************************************************************************/
HRESULT InitTimer( void );

/*******************************************************************************
* 関数名	:void UninitTimer( void )
*		タイマー終了処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:終了時に実行する関数を内包する関数で終了時に一度のみ動作。
*******************************************************************************/
void UninitTimer( void );

/*******************************************************************************
* 関数名	:void UpdateTimer( void )
*		タイマー更新処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:処理周回毎の処理内容を記述します。実質的なメイン関数です。
*******************************************************************************/
void UpdateTimer( void );

/*******************************************************************************
* 関数名	:void DrawTimer( void )
*		タイマー描画処理関数です。
* 引数		:void 引数なし
* 戻り値	:void 戻り値なし
* 説明		:画面出力に関わる処理を内包します。
*******************************************************************************/
void DrawTimer( void );

/*******************************************************************************
* 関数名	:void PlusTimer( int plusNum )
*		タイマー加算関数です。
* 引数		:int plusNum	加算値
* 戻り値	:void 戻り値なし
* 説明		:タイマーを加算します。
*******************************************************************************/
void PlusTimer( int plusNum );

/*******************************************************************************
* 関数名	:resetTimer( int resetNum )
*		タイマーリセット関数です。
* 引数		:int resetNum	リセット後の値
* 戻り値	:void 戻り値なし
* 説明		:タイマーをリセットします。
*******************************************************************************/
void resetTimer( int resetNum );

/*******************************************************************************
* 関数名	:int getTimer( void )
*		タイマーゲット関数です。
* 引数		:void 引数なし
* 戻り値	:int nowTimer	現在のミリ秒
* 説明		:タイマーをゲットします。
*******************************************************************************/
int getTimer( void );

#endif